<#@ template debug="true" hostspecific="true" language="C#"  #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core"#>
<#@ import namespace="System"#>
<#@ import namespace="System.Collections.Generic"#>
<#@ include file="DBSchema.ttinclude"#>
<#@ include file="MultiDocument.ttinclude"#>
<# var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = Path.GetDirectoryName(Host.TemplateFile)}; #>

<#
    var dbSchema=DBSchemaFactory.GetDBSchema();
    List<string> tableList=dbSchema.GetTablesList();
    foreach(string tableName in tableList)
    {
        manager.StartBlock(tableName+"Service.cs");
        Table table=dbSchema.GetTableMetadata(tableName);
        var Entity=tableName;
#>

using Entity;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using DapperEx;
using System.Collections;
using System.Data;
using DAL;

namespace BLL
{   
    public  class <#=tableName#>Service : ServiceBase<<#=Entity#>>
    {

    }
}

<#
        manager.EndBlock();
    }
    dbSchema.Dispose();

    manager.Process(true);
#>