<#@ template debug="true" hostspecific="true" language="C#"  #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core"#>
<#@ import namespace="System"#>
<#@ import namespace="System.Collections.Generic"#>
<#@ include file="DBSchema.ttinclude"#>
<#@ include file="MultiDocument.ttinclude"#>
<# var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = Path.GetDirectoryName(Host.TemplateFile)}; #>

<#
    var dbSchema=DBSchemaFactory.GetDBSchema();
    List<string> tableList=dbSchema.GetTablesList();
    foreach(string tableName in tableList)
    {
        manager.StartBlock(tableName+"Data.cs");
        Table table=dbSchema.GetTableMetadata(tableName);
#>
using AspNetCore.Demo.Enterprise.DateBase.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Dapper;
using System.Text;



namespace AspNetCore.Demo.Enterprise.DateBase.Data
{
    public class <#=tableName#>Data
    {
        protected DbConnection dbConnection = new DbConnection();

        #region 基本方法

        /// <summary>
        /// 根据ID查询信息
        /// </summary>
        /// <param name="id">ID号</param>
        /// <returns></returns>
        public <#=tableName#> QueryForId(int id)
        {
            return dbConnection.connection.QueryFirstOrDefault<<#=tableName#>>("select Id=@Id", id);
        }

        /// <summary>
        /// 查询所有
        /// </summary>
        /// <returns></returns>
        public IList<<#=tableName#>> QueryAll()
        {
            return dbConnection.connection.Query<<#=tableName#>>("select * from <#=tableName#>").ToList();
        }

        /// <summary>
        /// 根据查询数量获取记录
        /// </summary>
        /// <param name="count"></param>
        /// <returns></returns>
        public IList<<#=tableName#>> QueryForCount(int count)
        {
            var sqlStr = string.Format("select top {0} * from <#=tableName#>", count);
            return dbConnection.connection.Query<<#=tableName#>>(sqlStr).ToList();
        }

        /// <summary>
        /// 查询总记录数
        /// </summary>
        /// <returns></returns>
        public int QueryTotalCount()
        {
            return dbConnection.connection.QueryFirst<int>("select count(0) from <#=tableName#>");
        }

        /// <summary>
        /// 分页查询
        /// </summary>
        /// <param name="pageIndex">页码</param>
        /// <param name="pageCount">页面大小</param>
        /// <returns></returns>
        public IList<<#=tableName#>> QueryPageList(int pageIndex, int pageCount)
        {
            var sqlStr = string.Format("SELECT TOP {0} * FROM(SELECT ROW_NUMBER() OVER(ORDER BY id) AS RowNumber, *FROM  <#=tableName#>) A WHERE RowNumber > {0} * ({1} - 1)", pageCount, pageIndex);
            return dbConnection.connection.Query<<#=tableName#>>(sqlStr).ToList();
        }
        
        /// <summary>
        /// 根据ID更新数据
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public int Update(<#=tableName#> entity)
        {
            if(entity.ID == 0) return 0;
            if(!entity.Validator()) return 0;
            var parameters = new DynamicParameters();
            var updateStr = new StringBuilder();
<#
        for(int i=0;i<table.Columns.Count;i++)
        {
            if(table.Columns[i].UpColumnName=="ID")continue;            
#>
            updateStr.Append("<#=table.Columns[i].UpColumnName#>=@<#=table.Columns[i].UpColumnName#><# if(i<table.Columns.Count-1){#>,<#}#>");
            parameters.Add("@<#=table.Columns[i].UpColumnName#>", entity.<#=table.Columns[i].UpColumnName#>); 
     
<#
        }
#>
            var sqlStr = string.Format("update <#=tableName#> set {0} where ID=@ID",updateStr);
            return dbConnection.connection.Execute(sqlStr,parameters);
        }

        /// <summary>
        /// 根据ID删除信息
        /// </summary>
        /// <param name="id">ID</param>
        /// <returns></returns>
        public int DeleteForId(int id)
        {
            return dbConnection.connection.Execute("Delete from  <#=tableName#> where Id=@Id", id);
        }

        #endregion

        #region 扩展方法
        
        #endregion
    }
}
<#
        manager.EndBlock();
    }
    dbSchema.Dispose();

    manager.Process(true);
#>